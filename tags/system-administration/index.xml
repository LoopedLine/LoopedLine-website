<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>system administration on LoopedLine</title>
    <link>https://loopedline.com/tags/system-administration/</link>
    <description>Recent content in system administration on LoopedLine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Feb 2022 11:11:18 -0500</lastBuildDate>
    
	<atom:link href="https://loopedline.com/tags/system-administration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Multiple Files With Bash</title>
      <link>https://loopedline.com/post/creating-multiple-files-with-bash/</link>
      <pubDate>Wed, 16 Feb 2022 11:11:18 -0500</pubDate>
      
      <guid>https://loopedline.com/post/creating-multiple-files-with-bash/</guid>
      <description>Introduction When you want to create multiple files, Bash can help do it efficiently.
Below are several examples for creating files. To follow along, navigate to an empty folder where you want to create files and enter the commands.
A warning You may wish to remove files after each step, but since the rm command is powerful and can delete more files than you intended without prompting, make sure you understand its use before blindly applying the example commands below.</description>
    </item>
    
    <item>
      <title>Getting Started with the shuf Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-shuf-command-in-bash/</link>
      <pubDate>Tue, 15 Feb 2022 13:57:10 -0500</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-shuf-command-in-bash/</guid>
      <description>There are many, many, ways to create (pseudo)-random strings in Bash, but I found this approach utilizing shuf to be the most understandable. Also, it gives excellent control over the output (avoiding whitespace and special characters) without resorting to the use of the tr command to remove unwanted characters. And it seems to be available for many systems without requiring installation of additional packages.
The shuf command When first learning about a command like shuf it is helpful to start be reading the tldr and info entries for the command.</description>
    </item>
    
    <item>
      <title>Using sed in a Bash Script to Update Hugo Front Matter</title>
      <link>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</link>
      <pubDate>Fri, 11 Feb 2022 11:37:37 -0500</pubDate>
      
      <guid>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</guid>
      <description>Background Hugo used to have an undraft command to quickly alter front matter before publishing, but it was removed.
The command would update &amp;ldquo;the content’s draft status from ‘True’ to ‘False’ and&amp;hellip; the date to the current date and time&amp;rdquo;.
That&amp;rsquo;s useful functionality, so we&amp;rsquo;ll replicate it with a Bash script.
For this project we&amp;rsquo;ll use sed, which is one of the basic programs that comes with most distributions of Linux and it&amp;rsquo;s useful for (among other things) replacing segments of text.</description>
    </item>
    
    <item>
      <title>Getting started with the $RANDOM Variable in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-random-variable-in-bash/</link>
      <pubDate>Mon, 07 Feb 2022 15:48:06 -0500</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-random-variable-in-bash/</guid>
      <description>Creating Randomness in Bash There are many shell variables used in Bash. One of them is the Bash variable $RANDOM.
$RANDOM returns a pseudo-random number between 0 and 32767.
Try it by typing the following command into a Bash command line interpreter:
echo $RANDOM Run the command multiple times to see different results.
Changing the possible return range We can reduce the range of the output by using the modulo operator.</description>
    </item>
    
    <item>
      <title>There&#39;s a Difference Between rename and rename.ul in Bash</title>
      <link>https://loopedline.com/post/difference-between-rename-and-rename.ul/</link>
      <pubDate>Wed, 08 Dec 2021 13:20:10 -0500</pubDate>
      
      <guid>https://loopedline.com/post/difference-between-rename-and-rename.ul/</guid>
      <description>Confusion with rename There are several software packages with the name &amp;ldquo;rename&amp;rdquo; available for Bash.
That can cause confusion if you&amp;rsquo;re not aware of the fact.
Adding to the confusion, on many distributions of Linux, like Debian and Ubuntu, the rename command doesn&amp;rsquo;t refer to the &amp;ldquo;rename&amp;rdquo; that is part of the util-linux package. Instead, it likely refers to a &amp;ldquo;perl-rename&amp;rdquo; package. To call the util-linux version you&amp;rsquo;ll likely have to use the rename.</description>
    </item>
    
    <item>
      <title>Apt Update Not Working on Windows Subsystem for Linux [SOLVED]</title>
      <link>https://loopedline.com/post/apt-update-not-working-on-wsl/</link>
      <pubDate>Tue, 07 Dec 2021 15:20:39 -0500</pubDate>
      
      <guid>https://loopedline.com/post/apt-update-not-working-on-wsl/</guid>
      <description>The Problem In Windows Subsystem for Linux (WSL) when running the command
sudo apt update the following error appears for every package
 &amp;ldquo;Temporary failure resolving &amp;lsquo;archive.ubuntu.com&amp;rsquo;&amp;rdquo;
 and nothing is updated.
Furthermore, nothing can be installed using the command
sudo apt install &amp;lt;&amp;lt;PACKAGE-NAME&amp;gt;&amp;gt; for the same reason.
The Process A web search for the error led to a StackExchange question discussing the issue, which offered guidance on the problem.</description>
    </item>
    
    <item>
      <title>Unable to Open the Bash Shell in Ubuntu via Windows Subsystem for Linux [SOLVED]</title>
      <link>https://loopedline.com/post/unable-to-open-bash-on-wsl/</link>
      <pubDate>Tue, 07 Dec 2021 13:15:02 -0500</pubDate>
      
      <guid>https://loopedline.com/post/unable-to-open-bash-on-wsl/</guid>
      <description>The Problem When attempting to open the Bash shell in Ubuntu via Windows Subsystem for Linux (WSL) on Windows Terminal only the following message appears:
 The Windows Subsystem for Linux instance has terminated.
[process exited with code &amp;hellip;]
 The Process Part of the resolution process and sources are lost to me now, but I still want to document the solution that seems to resolve the issue.
A key seems to be running the terminal instance as administrator.</description>
    </item>
    
    <item>
      <title>Bash - Getting Started Working with the Shell</title>
      <link>https://loopedline.com/post/bash-getting-started-working-with-the-shell/</link>
      <pubDate>Sun, 05 Dec 2021 17:12:50 -0500</pubDate>
      
      <guid>https://loopedline.com/post/bash-getting-started-working-with-the-shell/</guid>
      <description>Introduction to Bash When you think of someone expertly working with a computer you might picture them stereotypically entering commands on a black screen with green text, the computer responding with rapidly scrolling walls of characters.
For a long time I didn&amp;rsquo;t realize the thing they were typing in was called a shell. (The differences between a terminal, console, command line, and shell are nuanced. Many of the responses to this StackExchange question offer some helpful insight and perspective on the topic.</description>
    </item>
    
  </channel>
</rss>