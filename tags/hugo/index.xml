<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on LoopedLine</title>
    <link>https://loopedline.com/tags/hugo/</link>
    <description>Recent content in Hugo on LoopedLine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 May 2022 13:53:48 -0400</lastBuildDate>
    
	<atom:link href="https://loopedline.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Prototype Contact Form with Hugo</title>
      <link>https://loopedline.com/post/building-a-prototype-contact-form-with-hugo/</link>
      <pubDate>Sat, 21 May 2022 13:53:48 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-a-prototype-contact-form-with-hugo/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll build a simple prototype of the contact form we want to use for the project.
Even though form fields are a basic part of HTML they are strangely complicated to build.</description>
    </item>
    
    <item>
      <title>Project - Building a Contact Form With Hugo and Hosting it with Netlify</title>
      <link>https://loopedline.com/post/project-building-a-contact-form-with-hugo-and-hosting-it-with-netlify/</link>
      <pubDate>Fri, 20 May 2022 12:18:46 -0400</pubDate>
      
      <guid>https://loopedline.com/post/project-building-a-contact-form-with-hugo-and-hosting-it-with-netlify/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this is the first post for a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll outline the overall approach for the project.
There are many ways to accomplish this task offering various tradeoffs.</description>
    </item>
    
    <item>
      <title>Overriding Bootstrap CSS in Hugo</title>
      <link>https://loopedline.com/post/overriding-bootstrap-css-in-hugo/</link>
      <pubDate>Wed, 04 May 2022 10:02:47 -0400</pubDate>
      
      <guid>https://loopedline.com/post/overriding-bootstrap-css-in-hugo/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll override the CSS styling for certain HTML elements.
Since this project utilizes a Hugo theme that in turn utilizes Bootstrap, much of the styling for this site comes from Bootstrap. Consequently, to make changes to the CSS styling of this site, we&amp;rsquo;ll need to override some of the styles currently defined by Bootstrap.</description>
    </item>
    
    <item>
      <title>Including Last Modified Date in Hugo List Pages</title>
      <link>https://loopedline.com/post/including-last-modified-date-in-hugo-list-pages/</link>
      <pubDate>Sun, 01 May 2022 14:43:42 -0400</pubDate>
      
      <guid>https://loopedline.com/post/including-last-modified-date-in-hugo-list-pages/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll add a last modified date to post list pages in Hugo.
In a previous post we added a last modified date to post pages, now we&amp;rsquo;ll reflect that information on list pages as well.
Building the solution Since the information already exists on each post page, we just need to update the list layout to display it.</description>
    </item>
    
    <item>
      <title>Including Last Modified Date in Hugo Posts</title>
      <link>https://loopedline.com/post/including-last-modified-date-in-hugo-posts/</link>
      <pubDate>Sat, 30 Apr 2022 20:52:03 -0400</pubDate>
      
      <guid>https://loopedline.com/post/including-last-modified-date-in-hugo-posts/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll add a last modified date to posts in Hugo.
We already have a date field that reflects when a post was first published. We want to keep that date and conditionally add a new date that reflects when the post was last updated.</description>
    </item>
    
    <item>
      <title>Building Improved List Page Navigation for Hugo</title>
      <link>https://loopedline.com/post/building-improved-list-page-navigation-for-hugo/</link>
      <pubDate>Tue, 05 Apr 2022 20:25:36 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-improved-list-page-navigation-for-hugo/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll build a new user interface for navigating between list pages.
As of this writing, the list page has right and left arrows that allow navigating to the list pages for earlier and later posts. We&amp;rsquo;ll keep those, and add a count of the list pages to provide some context, as well as adding a link to the All Posts list page.</description>
    </item>
    
    <item>
      <title>Automatically Building a List of All Posts in Hugo</title>
      <link>https://loopedline.com/post/automatically-building-a-list-of-all-posts-in-hugo/</link>
      <pubDate>Fri, 01 Apr 2022 14:29:17 -0400</pubDate>
      
      <guid>https://loopedline.com/post/automatically-building-a-list-of-all-posts-in-hugo/</guid>
      <description>The Challenge This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
For this post, we&amp;rsquo;ll look at how to build an automated list of all posts in the /project/content/post/ directory while leaving the existing paginator unaltered.
Hugo allows one list template per section, and since we want to keep the existing paginator, we need to find another way to automatically build that list.</description>
    </item>
    
    <item>
      <title>Changing a Hugo Theme Over Time</title>
      <link>https://loopedline.com/post/changing-a-hugo-theme-over-time/</link>
      <pubDate>Thu, 31 Mar 2022 14:17:14 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-a-hugo-theme-over-time/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
Consequently, nearly all design choices were initially made by the theme&amp;rsquo;s creator.
Naturally, when selecting a theme, you choose the one that best meets your goals. And the Minimal theme was chosen because it is clean and well-written.
But no theme is likely to match your project&amp;rsquo;s needs in every detail. As Zachary Wade Betz puts it:</description>
    </item>
    
    <item>
      <title>Changing the Spacing of Font Awesome Icons in Hugo</title>
      <link>https://loopedline.com/post/changing-the-spacing-of-font-awesome-icons-in-hugo/</link>
      <pubDate>Tue, 22 Mar 2022 13:54:32 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-the-spacing-of-font-awesome-icons-in-hugo/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
In this post, after resolving the problem of Changing the Size of Font Awesome Icons in Hugo, we now want to increase the spacing between the arrow icons used for page navigation icons on list pages.
The Process From the previous investigation mentioned above we know that the arrow icons are defined in the fa-arrow-left and fa-arrow-right elements of the paginator.</description>
    </item>
    
    <item>
      <title>Changing the Size of Font Awesome Icons in Hugo</title>
      <link>https://loopedline.com/post/changing-the-size-of-font-awesome-icons-in-hugo/</link>
      <pubDate>Mon, 21 Mar 2022 14:36:04 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-the-size-of-font-awesome-icons-in-hugo/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
In this post, we&amp;rsquo;ll look at changing the page navigation icons on list pages. For our purposes, the arrows used at the bottom of each list page are too small, making them difficult to click.
The Process As has been mentioned before, because Hugo offers so much flexibility and produces pages in such a layered way, it can be difficult to find the right place to make the necessary alterations.</description>
    </item>
    
    <item>
      <title>Regular Expression Syntax Highlighting [UNSOLVED]</title>
      <link>https://loopedline.com/post/regular-expression-syntax-highlighting/</link>
      <pubDate>Thu, 17 Mar 2022 11:36:59 -0400</pubDate>
      
      <guid>https://loopedline.com/post/regular-expression-syntax-highlighting/</guid>
      <description>The Problem When posting snippets of regular expression code inside code blocks (as in this example) it would be helpful to apply syntax highlighting.
Because this site uses Hugo, which uses Chroma, which does not yet include support for highlighting regular expressions another approach is required.
The Process A web search for regular expression syntax highlighting returned some discussions of the general question:
 Is there a good syntax highlighting hint for regular expressions?</description>
    </item>
    
    <item>
      <title>Escaping Markdown Code Fences Nested Within Code Fences [SOLVED]</title>
      <link>https://loopedline.com/post/escaping-markdown-code-fences-nested-within-code-fences/</link>
      <pubDate>Wed, 16 Mar 2022 23:14:22 -0400</pubDate>
      
      <guid>https://loopedline.com/post/escaping-markdown-code-fences-nested-within-code-fences/</guid>
      <description>The Problem When authoring articles using Markdown that include Markdown special characters in the content, questions can come up about how to escape those special characters.
For instance, this article about updating Hugo posts with code syntax highlighting includes Markdown code fences within code fences, which required figuring out how to escape code fences within code fences.
The Process A web search quickly led to this helpful article, which explained the options for escaping code fencing.</description>
    </item>
    
    <item>
      <title>Modifying the New Article Template in Hugo</title>
      <link>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</link>
      <pubDate>Mon, 14 Mar 2022 14:12:31 -0400</pubDate>
      
      <guid>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
After working with Hugo for a while you might find that there are certain pieces of code that you include in every project.
Once you tire of manually copying and pasting them, it&amp;rsquo;s time to figure out which template file to alter to automatically include those snippets.</description>
    </item>
    
    <item>
      <title>Simplifying Hugo Post Creation with a Bash Script</title>
      <link>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</link>
      <pubDate>Sun, 13 Mar 2022 22:16:57 -0400</pubDate>
      
      <guid>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</guid>
      <description>Background Creating new posts in Hugo is already pretty simple thanks to the post creation command, but it can help to remove even little bits of friction.
Two points of friction in the current process are:
 navigating to the project directory, and properly formatting the new file name by remembering to name the file with dashes (-) instead of spaces and including the .md file extension  In the same way that we simplified updating Hugo front matter with a Bash script, we can use a script to make post creation even simpler as well.</description>
    </item>
    
    <item>
      <title>Updating Hugo Posts with Code Syntax Highlighting [SOLVED]</title>
      <link>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</link>
      <pubDate>Sat, 12 Mar 2022 15:07:58 -0500</pubDate>
      
      <guid>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</guid>
      <description>The Problem Hugo&amp;rsquo;s code fence syntax produced code blocks but didn&amp;rsquo;t produce code with syntax highlighting.
The Process A web search for syntax highlighting in Hugo returned some Hugo documentation pages:
 Syntax Highlighting Configure Markup: Highlight  While these offered some background information, they didn&amp;rsquo;t help resolve the issue.
 That search also returned this article, which provided an example for one solution of adding the following to the Hugo config.</description>
    </item>
    
    <item>
      <title>Automating Hugo Website Publishing Workflow with Bash</title>
      <link>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</link>
      <pubDate>Thu, 03 Mar 2022 14:49:33 -0500</pubDate>
      
      <guid>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</guid>
      <description>Introduction Background We first need to define our terms.
Hugo already builds sites with one quick and easy command.
The automated website building this post refers to is several additional steps required for website publishing after that process in one particular workflow. Every person&amp;rsquo;s or team&amp;rsquo;s workflow for publishing a website is different. The workflow we&amp;rsquo;ll automate in this post includes the following:
 rebuilding a specific website with Hugo deleting all files and subdirectories in the website publishing directory except one specified file copying all files from the Hugo website project directory to the publishing directory  We&amp;rsquo;ll handle each step in turn and then bring them all together.</description>
    </item>
    
    <item>
      <title>Using the sed Command in a Bash Script to Update Hugo Front Matter</title>
      <link>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</link>
      <pubDate>Fri, 11 Feb 2022 11:37:37 -0500</pubDate>
      
      <guid>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</guid>
      <description>Background Hugo used to have an undraft command to quickly alter front matter before publishing, but it was removed.
The command would update &amp;ldquo;the content’s draft status from ‘True’ to ‘False’ and&amp;hellip; the date to the current date and time&amp;rdquo;.
That&amp;rsquo;s useful functionality, so we&amp;rsquo;ll replicate it with a Bash script.
For this project we&amp;rsquo;ll use sed, which is one of the basic programs that comes with most distributions of Linux and it&amp;rsquo;s useful for (among other things) replacing segments of text.</description>
    </item>
    
    <item>
      <title>Disabling Hugo&#39;s Automatic Hyperlinking of URLs [SOLVED]</title>
      <link>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</link>
      <pubDate>Sat, 14 Aug 2021 14:44:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
For this post, we&amp;rsquo;ll look at the issue that when Hugo rendered a webpage from a markdown file it automatically converted text URLs to hyperlinks.
The Process A web search for how to disable automatic hyperlinking in Hugo led to a few discussions of the issue:</description>
    </item>
    
    <item>
      <title>Hugo Site Looks Different Served Locally vs Remotely [SOLVED]</title>
      <link>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</link>
      <pubDate>Thu, 12 Aug 2021 22:44:18 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</guid>
      <description>The Problem When a new website layout generated with Hugo was pushed to production it rendered very differently on the web than it appeared locally.
It looked like the CSS was only partially applied and some elements overlapped one another.
The Process First, the source files were compared, but, as expected, they appeared identical.
Next, DevTools in the Chrome browser was used to compare a sample element on the site running locally vs remotely and showed that the sites were being styled by different CSS rules.</description>
    </item>
    
    <item>
      <title>Hugo Basic Terminal Command Quick Reference</title>
      <link>https://loopedline.com/post/hugo-basic-command-quick-reference/</link>
      <pubDate>Fri, 23 Jul 2021 12:30:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-basic-command-quick-reference/</guid>
      <description>Check Hugo version In a terminal, enter the command:
hugo version If Hugo is installed you should see a message indicating the Hugo version number.
Create a new website In a terminal pointed to the directory where you want Hugo project files to reside, enter the command:
hugo new site my-hugo-website NOTE: Replace my-hugo-website with the site name you want.
You should see a message beginning with
 Congratulations! Your new Hugo site is created in&amp;hellip;</description>
    </item>
    
    <item>
      <title>Building Your First Hugo Website</title>
      <link>https://loopedline.com/post/building-your-first-hugo-website/</link>
      <pubDate>Mon, 19 Jul 2021 21:05:55 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-your-first-hugo-website/</guid>
      <description>Who this is for If you want to build your first website with Hugo, this article is meant to get you started.
It is not an exhaustive or extensive guide. There are other good resources for that, and several are linked below.
But here you&amp;rsquo;ll find instructions on the critical path to get a website up and working.
There&amp;rsquo;s magic in motion, and just getting started is often the most important thing.</description>
    </item>
    
  </channel>
</rss>