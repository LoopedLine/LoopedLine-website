<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on LoopedLine</title>
    <link>https://loopedline.com/tags/hugo/</link>
    <description>Recent content in Hugo on LoopedLine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Mar 2022 14:12:31 -0400</lastBuildDate>
    
	<atom:link href="https://loopedline.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Modifying the New Article Template in Hugo</title>
      <link>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</link>
      <pubDate>Mon, 14 Mar 2022 14:12:31 -0400</pubDate>
      
      <guid>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</guid>
      <description>Background After working with Hugo for a while you might find that there are certain pieces of code that you include in every project.
Once you tire of manually copying and pasting them, it&amp;rsquo;s time to figure out which template file to alter to automatically include those snippets.
Because Hugo offers so much flexibility and produces pages in such a layered way, it can be difficult to find the right place to make the necessary alterations.</description>
    </item>
    
    <item>
      <title>Simplifying Hugo Post Creation with a Bash Script</title>
      <link>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</link>
      <pubDate>Sun, 13 Mar 2022 22:16:57 -0400</pubDate>
      
      <guid>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</guid>
      <description>Background Creating new posts in Hugo is already pretty simple thanks to the post creation command, but it can help to remove even little bits of friction.
Two points of friction in the current process are:
 navigating to the project directory, and properly formatting the new file name by remembering to name the file with dashes (-) instead of spaces and including the .md file extension  In the same way that we simplified updating Hugo front matter with a Bash script, we can use a script to make post creation even simpler as well.</description>
    </item>
    
    <item>
      <title>Updating Hugo Posts with Code Syntax Highlighting [SOLVED]</title>
      <link>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</link>
      <pubDate>Sat, 12 Mar 2022 15:07:58 -0500</pubDate>
      
      <guid>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</guid>
      <description>The Problem Hugo&amp;rsquo;s code fence syntax produced code blocks but didn&amp;rsquo;t produce code with syntax highlighting.
The Process A web search for syntax highlighting in Hugo returned some Hugo documentation pages:
 Syntax Highlighting Configure Markup: Highlight  While these offered some background information, they didn&amp;rsquo;t help resolve the issue.
 That search also returned this article, which provided an example for one solution of adding the following to the Hugo config.</description>
    </item>
    
    <item>
      <title>Automating Hugo Website Publishing Workflow with Bash</title>
      <link>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</link>
      <pubDate>Thu, 03 Mar 2022 14:49:33 -0500</pubDate>
      
      <guid>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</guid>
      <description>Introduction Background We first need to define our terms.
Hugo already builds sites with one quick and easy command.
The automated website building this post refers to is several additional steps required for website publishing after that process in one particular workflow. Every person&amp;rsquo;s or team&amp;rsquo;s workflow for publishing a website is different. The workflow we&amp;rsquo;ll automate in this post includes the following:
 rebuilding a specific website with Hugo deleting all files and subdirectories in the website publishing directory except one specified file copying all files from the Hugo website project directory to the publishing directory  We&amp;rsquo;ll handle each step in turn and then bring them all together.</description>
    </item>
    
    <item>
      <title>Using the sed Command in a Bash Script to Update Hugo Front Matter</title>
      <link>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</link>
      <pubDate>Fri, 11 Feb 2022 11:37:37 -0500</pubDate>
      
      <guid>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</guid>
      <description>Background Hugo used to have an undraft command to quickly alter front matter before publishing, but it was removed.
The command would update &amp;ldquo;the content’s draft status from ‘True’ to ‘False’ and&amp;hellip; the date to the current date and time&amp;rdquo;.
That&amp;rsquo;s useful functionality, so we&amp;rsquo;ll replicate it with a Bash script.
For this project we&amp;rsquo;ll use sed, which is one of the basic programs that comes with most distributions of Linux and it&amp;rsquo;s useful for (among other things) replacing segments of text.</description>
    </item>
    
    <item>
      <title>Disabling Hugo&#39;s Automatic Hyperlinking of URLs [SOLVED]</title>
      <link>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</link>
      <pubDate>Sat, 14 Aug 2021 14:44:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</guid>
      <description>The Problem When Hugo rendered a webpage from a markdown file it automatically converted text URLs to hyperlinks.
The Process A web search for how to disable automatic hyperlinking in Hugo led to a few discussions of the issue:
 Disabling smart quotes, auto code blocks, and auto hyperlinks? Goldmark: How to disable autolinks Configure Markup: Goldmark  Interpolating between them led to a solution.
The Solution Adding the following to the config.</description>
    </item>
    
    <item>
      <title>Hugo Site Looks Different Served Locally vs Remotely [SOLVED]</title>
      <link>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</link>
      <pubDate>Thu, 12 Aug 2021 22:44:18 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</guid>
      <description>The Problem When a new website layout generated with Hugo was pushed to production it rendered very differently on the web than it appeared locally.
It looked like the CSS was only partially applied and some elements overlapped one another.
The Process First, the source files were compared, but, as expected, they appeared identical.
Next, DevTools in the Chrome browser was used to compare a sample element on the site running locally vs remotely and showed that the sites were being styled by different CSS rules.</description>
    </item>
    
    <item>
      <title>Hugo Basic Terminal Command Quick Reference</title>
      <link>https://loopedline.com/post/hugo-basic-command-quick-reference/</link>
      <pubDate>Fri, 23 Jul 2021 12:30:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-basic-command-quick-reference/</guid>
      <description>Check Hugo version In a terminal, enter the command:
hugo version If Hugo is installed you should see a message indicating the Hugo version number.
Create a new website In a terminal pointed to the directory where you want Hugo project files to reside, enter the command:
hugo new site my-hugo-website NOTE: Replace my-hugo-website with the site name you want.
You should see a message beginning with
 Congratulations! Your new Hugo site is created in&amp;hellip;</description>
    </item>
    
    <item>
      <title>Building Your First Hugo Website</title>
      <link>https://loopedline.com/post/building-your-first-hugo-website/</link>
      <pubDate>Mon, 19 Jul 2021 21:05:55 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-your-first-hugo-website/</guid>
      <description>Who this is for If you want to build your first website with Hugo, this article is meant to get you started.
It is not an exhaustive or extensive guide. There are other good resources for that, and several are linked below.
But here you&amp;rsquo;ll find instructions on the critical path to get a website up and working.
There&amp;rsquo;s magic in motion, and just getting started is often the most important thing.</description>
    </item>
    
  </channel>
</rss>