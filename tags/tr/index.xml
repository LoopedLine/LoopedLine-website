<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tr on LoopedLine</title>
    <link>https://loopedline.com/tags/tr/</link>
    <description>Recent content in tr on LoopedLine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Feb 2022 11:11:18 -0500</lastBuildDate>
    
	<atom:link href="https://loopedline.com/tags/tr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Multiple Files With Bash</title>
      <link>https://loopedline.com/post/creating-multiple-files-with-bash/</link>
      <pubDate>Wed, 16 Feb 2022 11:11:18 -0500</pubDate>
      
      <guid>https://loopedline.com/post/creating-multiple-files-with-bash/</guid>
      <description>Introduction When you want to create multiple files, Bash can help do it efficiently.
Below are several examples for creating files. To follow along, navigate to an empty folder where you want to create files and enter the commands.
A warning You may wish to remove files after each step, but since the rm command is powerful and can delete more files than you intended without prompting, make sure you understand its use before blindly applying the example commands below.</description>
    </item>
    
  </channel>
</rss>