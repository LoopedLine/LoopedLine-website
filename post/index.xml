<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All Posts on LoopedLine</title>
    <link>https://loopedline.com/post/</link>
    <description>Recent content in All Posts on LoopedLine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jul 2022 14:22:54 -0400</lastBuildDate><atom:link href="https://loopedline.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Copying Directory Structure With a Bash Script - With Help From ChatGPT AI</title>
      <link>https://loopedline.com/post/copying-directory-structure-with-a-bash-script-with-help-from-chatgpt-ai/</link>
      <pubDate>Mon, 22 Jan 2024 14:52:21 -0500</pubDate>
      
      <guid>https://loopedline.com/post/copying-directory-structure-with-a-bash-script-with-help-from-chatgpt-ai/</guid>
      <description>Introduction In this post we&amp;rsquo;ll create a Bash command for copying the directory structure of one directory into another directory using a Bash script - and we&amp;rsquo;ll use ChatGPT to generate the script.
ChatGPT Conversation  Our Prompt
Write a Bash command to recursively copy the directory structure of one directory to another directory.
ChatGPT&amp;rsquo;s Response
 To recursively copy just the directory structure (without copying the actual files), you can use the `find` command in combination with `mkdir -p` and some text manipulation.</description>
    </item>
    
    <item>
      <title>Setting Up a Raspberry Pi as a Linux Print Server with CUPS</title>
      <link>https://loopedline.com/post/setting-up-a-raspberry-pi-as-a-linux-print-server-with-cups/</link>
      <pubDate>Fri, 19 Jan 2024 15:18:32 -0500</pubDate>
      
      <guid>https://loopedline.com/post/setting-up-a-raspberry-pi-as-a-linux-print-server-with-cups/</guid>
      <description>Introduction This is a guide for setting up a Raspberry Pi as a Linux Print Server using CUPS.
It presumes that you have a Raspberry Pi Zero 2 W running Ubuntu Server as described in a previous post
This guide outlines a minimal path for creating a print server. There are more comprehensive guides that you can look to if you encounter problems or if your situation is different than outlined here.</description>
    </item>
    
    <item>
      <title>Setting Up a Raspberry Pi Zero 2 W with Ubuntu Server</title>
      <link>https://loopedline.com/post/setting-up-a-raspberry-pi-zero-2-w-with-ubuntu-server/</link>
      <pubDate>Thu, 04 Jan 2024 15:24:56 -0500</pubDate>
      
      <guid>https://loopedline.com/post/setting-up-a-raspberry-pi-zero-2-w-with-ubuntu-server/</guid>
      <description>Introduction This is a guide for installing Ubuntu Server on a Raspberry Pi Zero 2 W via a headless setup using the Raspberry Pi Imager and another computer running Linux.
Many of the steps are outlined in the Raspberry Pi Foundation&amp;rsquo;s Documentation in the Getting Started Guide.
There are a few additional steps and helpful details that this guide is intended to provide for a smooth setup.
Parts for the Pi There are several necessary components:</description>
    </item>
    
    <item>
      <title>Bash and The Linux Shell - Basic Terminal Command Quick Reference</title>
      <link>https://loopedline.com/post/bash-and-the-linux-shell-basic-terminal-command-quick-reference/</link>
      <pubDate>Wed, 18 Oct 2023 22:36:01 -0400</pubDate>
      
      <guid>https://loopedline.com/post/bash-and-the-linux-shell-basic-terminal-command-quick-reference/</guid>
      <description>Introduction This is part of a series about Bash and the Linux Shell.
Other posts in the series introduce and explain several basic terminal commands used in Bash and the Linux Shell.
This post serves as a quick reference for those commands.
Context In this post we&amp;rsquo;ll assume that Bash is installed and that all commands are entered in a Bash terminal.
While much of the information applies generally to Linux, some of the instructions will not apply to all systems.</description>
    </item>
    
    <item>
      <title>Bash and the Linux Shell - 02 - Getting Started with The Basics</title>
      <link>https://loopedline.com/post/bash-and-the-linux-shell-02-getting-started-with-the-basics/</link>
      <pubDate>Sun, 15 Oct 2023 10:05:33 -0400</pubDate>
      
      <guid>https://loopedline.com/post/bash-and-the-linux-shell-02-getting-started-with-the-basics/</guid>
      <description>Series This is part of a series about Bash and the Linux Shell.
The previous post looked at what Bash is and what it&amp;rsquo;s useful for.
In this post, we&amp;rsquo;ll look at the basics of getting started using Bash and the Linux Shell.
Introduction As we discussed in the previous post, Bash is a popular tool created from the GNU project for interacting with your computer via text commands.
By using these commands in Bash you are able to work directly with your operating system and many of the powerful tools that it offers.</description>
    </item>
    
    <item>
      <title>Bash and the Linux Shell - Topic</title>
      <link>https://loopedline.com/post/bash-and-the-linux-shell-topic/</link>
      <pubDate>Thu, 12 Oct 2023 15:12:11 -0400</pubDate>
      
      <guid>https://loopedline.com/post/bash-and-the-linux-shell-topic/</guid>
      <description>Introduction This is our central topic page for Bash and the Linux Shell.
Bash and the Linux shell are powerful tools. There is a lot that can be accomplished efficiently with Bash.
This post contains a curated list of resources for learning about Bash and the Linux shell. Some of the linked resources were produced by this project, though many are produced by others.
Youâ€™re not likely to need all of the resources listed here.</description>
    </item>
    
    <item>
      <title>Getting Started with the neofetch Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-the-neofetch-command-in-bash/</link>
      <pubDate>Wed, 27 Sep 2023 12:30:04 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-the-neofetch-command-in-bash/</guid>
      <description>Introduction Linux systems are made up of many components working together. And it may not always be clear to the user (especially a new user) what parts comprise their system.
If you have a question about what part was used for some portion of your system there are numerous fetches - tools for fetching system information - available for finding and printing system component information.
One popular option is neofetch.</description>
    </item>
    
    <item>
      <title>Getting Started with the trash Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-the-trash-command-in-bash/</link>
      <pubDate>Mon, 25 Sep 2023 10:46:49 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-the-trash-command-in-bash/</guid>
      <description>Introduction Deleting files is a basic function of using a computer. And on Linux, there is more than one way to delete things.
One of the tools, rm, comes standard but has some drawbacks.
Another tool, trash, does not come standard on most distributions, but provides some helpful protections.
We&amp;rsquo;ll discuss them both and take a brief look at how to use the trash tool.
Dangers of rm The command to delete files or directories that comes standard with nearly all Linux distributions is rm.</description>
    </item>
    
    <item>
      <title>Getting Started with the tldr Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-the-tldr-command-in-bash/</link>
      <pubDate>Sun, 24 Sep 2023 22:02:42 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-the-tldr-command-in-bash/</guid>
      <description>Introduction tldr is a really helpful tool for the command line.
It displays short, simple help pages for command line tools, from the user-maintained tldr-pages project.
The tldr entries are shorter and more digestible than man pages, so it is great for learning about other commands.
It does not come installed on most Linux distributions, but on many it is easy to install.
You can also use tldr via the web app without installing it.</description>
    </item>
    
    <item>
      <title>Use Caution When Copying and Pasting to the Command Line</title>
      <link>https://loopedline.com/post/use-caution-when-copying-and-pasting-to-the-command-line/</link>
      <pubDate>Wed, 20 Sep 2023 23:03:32 -0400</pubDate>
      
      <guid>https://loopedline.com/post/use-caution-when-copying-and-pasting-to-the-command-line/</guid>
      <description>An important note of caution Because Bash and the Linux shell are so powerful, you need to be cautious what commands you enter.
Running the wrong command (or the right command in the wrong place) can irretrievablly delete your personal data or allow your computer to be compromised.
Make sure you understand commands before you type them or copy and paste them to your machine.
As this article helpfully illustrates, you should not blindly copy and paste commands from the internet into your terminal.</description>
    </item>
    
    <item>
      <title>Trouble Adding Accounts to Mozilla Thunderbird Email Client [SOLVED]</title>
      <link>https://loopedline.com/post/trouble-adding-accounts-to-mozilla-thunderbird-email-client/</link>
      <pubDate>Sat, 02 Sep 2023 14:28:29 -0400</pubDate>
      
      <guid>https://loopedline.com/post/trouble-adding-accounts-to-mozilla-thunderbird-email-client/</guid>
      <description>The Problem After setting up one Gmail account in Mozilla Thunderbird I experienced trouble adding additional Gmail accounts.
While trying to add a new account a new Gmail browser window would open and prompt for account name and password. Though there was no problem for the first account, I couldn&amp;rsquo;t get past this point for subsequent accounts.
It looked like the browser page just reloaded over and over again after about 10-20 seconds.</description>
    </item>
    
    <item>
      <title>Adding a Directory Shortcut to the Dash Panel In Ubuntu</title>
      <link>https://loopedline.com/post/adding-a-directory-shortcut-to-the-dash-panel-in-ubuntu/</link>
      <pubDate>Thu, 31 Aug 2023 14:09:20 -0400</pubDate>
      
      <guid>https://loopedline.com/post/adding-a-directory-shortcut-to-the-dash-panel-in-ubuntu/</guid>
      <description>Background Several Linux distributions use the GNOME desktop environment. For Ubuntu, which we&amp;rsquo;ll focus on here, this is true for the &amp;ldquo;vanilla&amp;rdquo; (i.e. the &amp;ldquo;standard&amp;rdquo;, &amp;ldquo;stock&amp;rdquo;, or &amp;ldquo;base&amp;rdquo;) Ubuntu distribution, as well as several &amp;ldquo;flavors&amp;rdquo; of Ubuntu.
One of the main elements of the GNOME desktop is the dash panel or dash bar, which GNOME refers to as the dash: &amp;ldquo;The dash shows you your favorite and running applications.&amp;quot; (I think referring to it as &amp;ldquo;the dash&amp;rdquo; is a little cryptic to newcomers so in this post I&amp;rsquo;ll refer to it as the dash panel instead.</description>
    </item>
    
    <item>
      <title>Backing Up Git Config Values With a Bash Script</title>
      <link>https://loopedline.com/post/backing-up-git-config-values-with-a-bash-script/</link>
      <pubDate>Fri, 25 Aug 2023 23:36:35 -0400</pubDate>
      
      <guid>https://loopedline.com/post/backing-up-git-config-values-with-a-bash-script/</guid>
      <description>Introduction This post is part of a series about automating data backups in Linux.
In the previous post we automated the process to backup Visual Studio Code (VS Code) settings and a list of installed extensions.
In this post we&amp;rsquo;ll construct a Bash script to automate the backup of global git config values.
The Script We&amp;rsquo;ve developed Bash scripts for automating tasks in previous posts so we&amp;rsquo;ll leverage that work and modify it for our current purposes.</description>
    </item>
    
    <item>
      <title>Backing Up Visual Studio Code (VS Code) Settings and Extensions With a Bash Script</title>
      <link>https://loopedline.com/post/backing-up-vs-code-settings-and-extensions-with-a-bash-script/</link>
      <pubDate>Wed, 09 Nov 2022 13:46:39 -0500</pubDate>
      
      <guid>https://loopedline.com/post/backing-up-vs-code-settings-and-extensions-with-a-bash-script/</guid>
      <description>Introduction This post is part of a series about automating data backups in Linux.
In the previous post we automated the process to backup a .bashrc file with a Bash script.
In this post we&amp;rsquo;ll automate the process of backing up Visual Studio Code (VS Code) settings and a list of installed extensions with a Bash script.
The Script We&amp;rsquo;ve developed Bash scripts for automating tasks in previous posts, so we&amp;rsquo;ll leverage that work and modify it for our current purposes.</description>
    </item>
    
    <item>
      <title>Backing Up a Directory Structure With the tree Command in a Bash Script</title>
      <link>https://loopedline.com/post/backing-up-a-directory-structure-with-the-tree-command-in-a-bash-script/</link>
      <pubDate>Mon, 07 Nov 2022 13:19:14 -0500</pubDate>
      
      <guid>https://loopedline.com/post/backing-up-a-directory-structure-with-the-tree-command-in-a-bash-script/</guid>
      <description>Introduction This post is part of a series about automating data backups in Linux.
In the previous post we automated the process to backup a .bashrc file with a Bash script.
Similarly, in this post we&amp;rsquo;ll automate the process of saving the layout of several specific directories with a Bash script.
The Script We&amp;rsquo;ve developed Bash scripts for automating tasks in previous posts, so we&amp;rsquo;ll leverage that work and modify it for our current purposes.</description>
    </item>
    
    <item>
      <title>Getting Started with the tree Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-the-tree-command-in-bash/</link>
      <pubDate>Sun, 06 Nov 2022 20:28:22 -0500</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-the-tree-command-in-bash/</guid>
      <description>Introduction The tree command is extremely useful.
According to the tree homepage:
 Tree is a recursive directory listing command that produces a depth indented listing of files
 In other words, tree displays a visual tree of the directory, it&amp;rsquo;s subdirectories, and all their content.
It is much faster and much more understandable than using cd and ls commands repeatedly to understand a directory structure and content.
It might best be understood by example.</description>
    </item>
    
    <item>
      <title>Backing Up the .bashrc File with a Bash Script</title>
      <link>https://loopedline.com/post/backing-up-the-bashrc-file-with-a-bash-script/</link>
      <pubDate>Fri, 04 Nov 2022 21:36:51 -0400</pubDate>
      
      <guid>https://loopedline.com/post/backing-up-the-bashrc-file-with-a-bash-script/</guid>
      <description>Introduction This post is part of a series about automating data backups in Linux.
In this post we&amp;rsquo;ll construct a Bash script to automate the backup of the .bashrc file.
The Script We&amp;rsquo;ve developed Bash scripts for automating tasks in previous posts so we&amp;rsquo;ll leverage that work and modify it for our current purposes.
Script code backup_bashrc.sh
#!/bin/bash  # VARIABLES bashrc_directory=&amp;#34;/home/$USER/&amp;#34; bashrc_filename=&amp;#34;.bashrc&amp;#34; backup_top_directory=&amp;#34;/home/$USER/backups/&amp;#34; backup_filename=&amp;#34;backup_of_bashrc_$(date +%Y-%m-%d)&amp;#34;  # VARIABLES, constructed bashrc_location=$bashrc_directory$bashrc_filename backup_output_directory=$backup_top_directory$backup_filename  # FUNCTION # Provides contextual output script_info() { echo echo echo echo echo ============================================================= echo ==================== script info - START ==================== echo echo &amp;#34;Executing $BASH_SOURCE&amp;#34; echo echo &amp;#34;.</description>
    </item>
    
    <item>
      <title>Creating Separate List Pages in Hugo for Different Topics</title>
      <link>https://loopedline.com/post/creating-separate-list-pages-in-hugo-for-different-topics/</link>
      <pubDate>Wed, 27 Jul 2022 15:46:50 -0400</pubDate>
      
      <guid>https://loopedline.com/post/creating-separate-list-pages-in-hugo-for-different-topics/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In the second site design of this project we incorporated the Minimal Hugo theme, which offers one place for articles.
In this post we&amp;rsquo;ll modify the theme to create a new third site design that adds an additional category to display content for a separate topic.</description>
    </item>
    
    <item>
      <title>Know What vs Know How</title>
      <link>https://loopedline.com/post/know-what-vs-know-how/</link>
      <pubDate>Sun, 24 Jul 2022 13:07:36 -0400</pubDate>
      
      <guid>https://loopedline.com/post/know-what-vs-know-how/</guid>
      <description>There&amp;rsquo;s a difference between know what and know how.
There&amp;rsquo;s a difference between knowing about a thing and knowing how to do a thing.
You can learn about cooking without ever really learning how to cook.
You can study music without being able to produce it.
Our language for each category is not always clear, but we often refer to know what as &amp;ldquo;knowledge&amp;rdquo; and know how as &amp;ldquo;skill&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>If You Think You&#39;re Green, You Grow</title>
      <link>https://loopedline.com/post/if-you-think-youre-green-you-grow/</link>
      <pubDate>Sat, 23 Jul 2022 11:17:07 -0400</pubDate>
      
      <guid>https://loopedline.com/post/if-you-think-youre-green-you-grow/</guid>
      <description>It&amp;rsquo;s hard to grow when you think you don&amp;rsquo;t need to.
It&amp;rsquo;s hard to learn when you think you know enough already.
Growth, learning, advancement of any kind takes effort, resources, time.
You&amp;rsquo;re not likely to expend that effort unless you think you need to.
Learning requires the humility to recognize that you have something to learn.
You won&amp;rsquo;t learn until you try.
You won&amp;rsquo;t try unless you think you need to.</description>
    </item>
    
    <item>
      <title>Beginning</title>
      <link>https://loopedline.com/post/beginning/</link>
      <pubDate>Fri, 22 Jul 2022 16:14:58 -0400</pubDate>
      
      <guid>https://loopedline.com/post/beginning/</guid>
      <description>Tempus Fugit  Some things are heard so often that we stop hearing them.
  Life is short. And just because that&amp;rsquo;s cliche doesn&amp;rsquo;t make it any less true.
&amp;ndash;Richie Norton
  There are many truths that sound like cliches, but they remain truths.
  Go for it now. The future is promised to no one.
&amp;ndash;Wayne Dyer
  We become insensitive to the reality of an idea because we hear it so much.</description>
    </item>
    
    <item>
      <title>Thank You (2022)</title>
      <link>https://loopedline.com/post/thank-you-2022/</link>
      <pubDate>Mon, 18 Jul 2022 11:24:19 -0400</pubDate>
      
      <guid>https://loopedline.com/post/thank-you-2022/</guid>
      <description>Introduction This project exists thanks to the incredible generosity of a tremendous number of people.
It wouldn&amp;rsquo;t be possible to thank everyone who contributed. Acknowledgements are always incomplete.
Yet we want to make the attempt to express our gratitude.
Scope This project (in its current form) is now one year old.
We want to acknowledge the contributions of various companies, organizations, and groups that helped it reach this point.
While we might desire to be more granualar in our approbation, it would be both impractical in scope and imbalanced in outcome.</description>
    </item>
    
    <item>
      <title>Fixing the Date Comparison Logic for Hugo Posts</title>
      <link>https://loopedline.com/post/fixing-the-date-comparison-logic-for-hugo-posts/</link>
      <pubDate>Mon, 11 Jul 2022 22:47:54 -0400</pubDate>
      
      <guid>https://loopedline.com/post/fixing-the-date-comparison-logic-for-hugo-posts/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In two previous posts we added a last modified date to post pages and to list pages in Hugo. But the logic used to determine if the last modified date should be displayed was flawed.
In this post we&amp;rsquo;ll fix that logic to correctly determine when to display the last modified date.</description>
    </item>
    
    <item>
      <title>Improving the Contact Form UI</title>
      <link>https://loopedline.com/post/improving-the-contact-form-ui/</link>
      <pubDate>Mon, 11 Jul 2022 15:56:14 -0400</pubDate>
      
      <guid>https://loopedline.com/post/improving-the-contact-form-ui/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In a previous post we built a simple contact form. That form worked fine, but there were some elements of the user interface (UI) that weren&amp;rsquo;t optimal.</description>
    </item>
    
    <item>
      <title>Basic Git Terminal Command Quick Reference</title>
      <link>https://loopedline.com/post/git-terminal-command-quick-reference/</link>
      <pubDate>Tue, 05 Jul 2022 14:13:01 -0400</pubDate>
      
      <guid>https://loopedline.com/post/git-terminal-command-quick-reference/</guid>
      <description>Introduction This post is part of a series about Git and GitHub.
Context All commands are used in a terminal and assume that Git is installed.
Commands should be executed in a terminal pointed to the directory of the relevant Git repository, unless otherwise stated.
Basic commands Note: All the commands in this section can be executed in a terminal pointed at any directory.
List basic Git commands Command:
git or</description>
    </item>
    
    <item>
      <title>Getting Started With Git Remote Repositories (Like GitHub)</title>
      <link>https://loopedline.com/post/getting-started-with-git-remote-repositories-like-github/</link>
      <pubDate>Mon, 04 Jul 2022 13:42:42 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-git-remote-repositories-like-github/</guid>
      <description>Introduction This post is part of a series about Git and GitHub.
In all our previous posts we worked with Git locally.
In this post we&amp;rsquo;re going to look at using Git to work with remote repositories.
What is a remote repository? According to the &amp;ldquo;Git Basics - Working with Remotes&amp;rdquo; section from Pro Git by Scott Chacon and Ben Straub:
 Remote repositories are versions of your project that are hosted on the Internet or network somewhere.</description>
    </item>
    
    <item>
      <title>Getting Started with Git Branching and Merging</title>
      <link>https://loopedline.com/post/getting-started-with-git-branching-and-merging/</link>
      <pubDate>Sun, 03 Jul 2022 09:00:03 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-git-branching-and-merging/</guid>
      <description>Introduction This post is part of a series about Git and GitHub.
In the previous post we looked at how to start working with Git as simply as possible. We did that by focusing on only Git, working with it only locally, and using only the most basic commands.
After installing and setting up Git, the commands we looked at were those for establishing a Git repository and completing the Version Control Cycle.</description>
    </item>
    
    <item>
      <title>Getting Started with Git</title>
      <link>https://loopedline.com/post/getting-started-with-git/</link>
      <pubDate>Sat, 02 Jul 2022 12:52:47 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-git/</guid>
      <description>Introduction This post is part of a series about Git and GitHub.
In the previous post we looked at what Git and GitHub are, what problems they solve, and some key differences between them.
The goal of this post is to get you started working with Git as simply as possible.
To keep things simple we&amp;rsquo;ll narrow our focus in this post in three ways:
  We&amp;rsquo;ll look at just Git - not GitHub.</description>
    </item>
    
    <item>
      <title>Getting Introduced to Git and GitHub</title>
      <link>https://loopedline.com/post/getting-introduced-to-git-and-github/</link>
      <pubDate>Fri, 01 Jul 2022 14:25:55 -0400</pubDate>
      
      <guid>https://loopedline.com/post/getting-introduced-to-git-and-github/</guid>
      <description>Introduction This post is part of a series about Git and GitHub.
Git and GitHub are two related but separate tools that are helpful for software development, as well as many other things.
They are both flexible and powerful, which makes them very useful.
But that flexibility and power come from some complex features and interactions that can also make them seem intimidating at first. They do not need to be intimitidating, however.</description>
    </item>
    
    <item>
      <title>Git and GitHub - Topic</title>
      <link>https://loopedline.com/post/git-and-github-topic/</link>
      <pubDate>Fri, 01 Jul 2022 13:40:27 -0400</pubDate>
      
      <guid>https://loopedline.com/post/git-and-github-topic/</guid>
      <description>Introduction This post is the start of a series on Git and GitHub.
There are many uses for Git and GitHub so there&amp;rsquo;s isn&amp;rsquo;t one right path for learning about them. Some users will utilize one set of features, while another group of users may focus on a fairly different set of features. Consequently, an efficient path for learning about Git and GitHub will depend on what you want to do with those tools and how you intend to use them.</description>
    </item>
    
    <item>
      <title>Creating a Shared Partial File in a Hugo Project for Term and List Pages</title>
      <link>https://loopedline.com/post/creating-a-shared-partial-file-in-a-hugo-project-for-term-and-list-pages/</link>
      <pubDate>Wed, 08 Jun 2022 12:18:15 -0400</pubDate>
      
      <guid>https://loopedline.com/post/creating-a-shared-partial-file-in-a-hugo-project-for-term-and-list-pages/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In a previous post we updated the list template so that it worked as intended for all sections and subsections.
The terms template, however, which generates pages like the tags page, used redundant code that still reflected the original interface.
In this post we&amp;rsquo;ll create a new list-page partial template file with the code from the previously updated list template.</description>
    </item>
    
    <item>
      <title>CSS Not Updating? Try a Hard Reload</title>
      <link>https://loopedline.com/post/css-not-updating-try-a-hard-reload/</link>
      <pubDate>Wed, 08 Jun 2022 11:07:58 -0400</pubDate>
      
      <guid>https://loopedline.com/post/css-not-updating-try-a-hard-reload/</guid>
      <description>Introduction When testing changes to CSS it can sometimes appear that nothing is happening.
That can be caused by many issues, but one issue that can be tricky to detect is when the browser is caching old CSS after a reload of the page.
Even after the page is refreshed and the HTML content is updated, the old CSS styling can still linger. That can be particularly frustrating and confusing. If the page has refreshed, why hasn&amp;rsquo;t the styling updated?</description>
    </item>
    
    <item>
      <title>Fixed Header Covering On-Page Links [SOLVED]</title>
      <link>https://loopedline.com/post/fixed-header-covering-on-page-links/</link>
      <pubDate>Tue, 07 Jun 2022 11:29:21 -0400</pubDate>
      
      <guid>https://loopedline.com/post/fixed-header-covering-on-page-links/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
The Problem When clicking on-page links the top of the content is covered by the site&amp;rsquo;s fixed header.
We want linked content to display just below the fixed header.
The Process This is a common problem with a long history, so a web search quickly led to some helpful discussions of the issue:</description>
    </item>
    
    <item>
      <title>Updating the Hugo List Page Layout to Display All Posts</title>
      <link>https://loopedline.com/post/updating-the-hugo-list-page-layout-to-display-all-posts/</link>
      <pubDate>Wed, 01 Jun 2022 15:32:34 -0400</pubDate>
      
      <guid>https://loopedline.com/post/updating-the-hugo-list-page-layout-to-display-all-posts/</guid>
      <description>UPDATE The paginator partial template file at the end of this post includes a line of code that is commented out yet is necessary for Hugo to render the page correctly. That is confusing and undesirable. This issue was addressed and corrected in a later post.
Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.</description>
    </item>
    
    <item>
      <title>Adding Sequence IDs to Hugo Post Filenames</title>
      <link>https://loopedline.com/post/adding-sequence-ids-to-hugo-post-filenames/</link>
      <pubDate>Sun, 29 May 2022 08:14:26 -0400</pubDate>
      
      <guid>https://loopedline.com/post/adding-sequence-ids-to-hugo-post-filenames/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
Currently, when new posts are created with the hugo new &amp;lt;file_name&amp;gt; command, a new file is created named with the file_name parameter passed to the command. With the help of the post archetype file, that filename is also used to create the post title.
That approach is fine for a small number of posts, but as the number of posts grows it becomes harder to find a specific post when looking, because files are sorted alphabetically by filename, which isn&amp;rsquo;t particularly helpful in many cases.</description>
    </item>
    
    <item>
      <title>Creating a Persistent Sequence ID Counter With Bash</title>
      <link>https://loopedline.com/post/creating-a-persistent-sequence-id-counter-with-bash/</link>
      <pubDate>Fri, 27 May 2022 22:31:44 -0400</pubDate>
      
      <guid>https://loopedline.com/post/creating-a-persistent-sequence-id-counter-with-bash/</guid>
      <description>Objective In this post we&amp;rsquo;ll create a persistent counter for generating unique sequence IDs using a Bash script.
Building the solution We&amp;rsquo;ll build the persistent counter using two files
 a counter file that stores the next seqid a script that reads and increments the seqid  Creating the counter file Creating the counter file is very simple.
We&amp;rsquo;ll create a file named counter_next_test.txt with the Bash command:
touch counter_next_test.txt And we&amp;rsquo;ll populate it with the value 1 with the command:</description>
    </item>
    
    <item>
      <title>Fixing Site Link Errors Between Subdomains in Hugo [SOLVED]</title>
      <link>https://loopedline.com/post/fixing-site-link-errors-between-subdomains-in-hugo/</link>
      <pubDate>Wed, 25 May 2022 22:32:08 -0400</pubDate>
      
      <guid>https://loopedline.com/post/fixing-site-link-errors-between-subdomains-in-hugo/</guid>
      <description>The Problem Because of the design decision to build the website files for sites hosted on two subdomains within the same Hugo project there were several adjustments that had to be made.
One issue was that within a given subdomain links could be expressed as a relative path (/about/ or /post/, for instance), but across different subdomains that didn&amp;rsquo;t work.
Specifically, on the page subdomain those links would point to page.</description>
    </item>
    
    <item>
      <title>Separating the Content of 2 Websites Generated by 1 Hugo Project with a Bash Script</title>
      <link>https://loopedline.com/post/separating-the-content-of-2-websites-generated-by-1-hugo-project-with-a-bash-script/</link>
      <pubDate>Tue, 24 May 2022 21:30:12 -0400</pubDate>
      
      <guid>https://loopedline.com/post/separating-the-content-of-2-websites-generated-by-1-hugo-project-with-a-bash-script/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll develop Bash scripts to separate the content for two website subdomains that was generated by one Hugo project.</description>
    </item>
    
    <item>
      <title>Building a Contact Form with Netlify</title>
      <link>https://loopedline.com/post/building-a-contact-form-with-netlify/</link>
      <pubDate>Mon, 23 May 2022 08:12:40 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-a-contact-form-with-netlify/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll turn our prototype contact form from a previous post into a functioning contact form using Netlify.
As previously mentioned, Netlify provides &amp;ldquo;built-in form handling thatâ€™s enabled by default.</description>
    </item>
    
    <item>
      <title>Setting Up a Website Subdomain to Host Content With Different Providers</title>
      <link>https://loopedline.com/post/setting-up-a-website-subdomain-to-host-content-with-different-providers/</link>
      <pubDate>Sun, 22 May 2022 13:15:05 -0400</pubDate>
      
      <guid>https://loopedline.com/post/setting-up-a-website-subdomain-to-host-content-with-different-providers/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll setup a subdomain for our website so that we can easily host content with two different hosting providers.</description>
    </item>
    
    <item>
      <title>Building a Prototype Contact Form with Hugo</title>
      <link>https://loopedline.com/post/building-a-prototype-contact-form-with-hugo/</link>
      <pubDate>Sat, 21 May 2022 13:53:48 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-a-prototype-contact-form-with-hugo/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this post is part of a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll build a simple prototype of the contact form we want to use for the project.
Even though form fields are a basic part of HTML they are strangely complicated to build.</description>
    </item>
    
    <item>
      <title>Project - Building a Contact Form With Hugo and Hosting it with Netlify</title>
      <link>https://loopedline.com/post/project-building-a-contact-form-with-hugo-and-hosting-it-with-netlify/</link>
      <pubDate>Fri, 20 May 2022 12:18:46 -0400</pubDate>
      
      <guid>https://loopedline.com/post/project-building-a-contact-form-with-hugo-and-hosting-it-with-netlify/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Specifically, this is the first post for a project to build a contact form with Hugo and host it with Netlify.
Objective In this post we&amp;rsquo;ll outline the overall approach for the project.
There are many ways to accomplish this task offering various tradeoffs.</description>
    </item>
    
    <item>
      <title>Overriding Bootstrap CSS in Hugo</title>
      <link>https://loopedline.com/post/overriding-bootstrap-css-in-hugo/</link>
      <pubDate>Wed, 04 May 2022 10:02:47 -0400</pubDate>
      
      <guid>https://loopedline.com/post/overriding-bootstrap-css-in-hugo/</guid>
      <description>Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll override the CSS styling for certain HTML elements.
Since this project utilizes a Hugo theme that in turn utilizes Bootstrap, much of the styling for this site comes from Bootstrap. Consequently, to make changes to the CSS styling of this site, we&amp;rsquo;ll need to override some of the styles currently defined by Bootstrap.</description>
    </item>
    
    <item>
      <title>Including Last Modified Date in Hugo List Pages</title>
      <link>https://loopedline.com/post/including-last-modified-date-in-hugo-list-pages/</link>
      <pubDate>Sun, 01 May 2022 14:43:42 -0400</pubDate>
      
      <guid>https://loopedline.com/post/including-last-modified-date-in-hugo-list-pages/</guid>
      <description>UPDATE The date comparison logic in this post has a subtle flaw. It was addressed and corrected in a later post.
Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll add a last modified date to post list pages in Hugo.
In a previous post we added a last modified date to post pages, now we&amp;rsquo;ll reflect that information on list pages as well.</description>
    </item>
    
    <item>
      <title>Including Last Modified Date in Hugo Posts</title>
      <link>https://loopedline.com/post/including-last-modified-date-in-hugo-posts/</link>
      <pubDate>Sat, 30 Apr 2022 20:52:03 -0400</pubDate>
      
      <guid>https://loopedline.com/post/including-last-modified-date-in-hugo-posts/</guid>
      <description>UPDATE The date comparison logic in this post has a subtle flaw. It was addressed and corrected in a later post.
Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
Objective In this post we&amp;rsquo;ll add a last modified date to posts in Hugo.
We already have a date field that reflects when a post was first published.</description>
    </item>
    
    <item>
      <title>Building Improved List Page Navigation for Hugo</title>
      <link>https://loopedline.com/post/building-improved-list-page-navigation-for-hugo/</link>
      <pubDate>Tue, 05 Apr 2022 20:25:36 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-improved-list-page-navigation-for-hugo/</guid>
      <description>Note of Caution The approach detailed in this post has some problems and produces confusing results for subsection list pages.
It was replaced and superceded by the approach used in this post.
Update Note When this post was originally published, it linked to a dynamic version of the All Posts list page. That page has been retired. Consequently, links to that page have been replaced with a links to a saved static version of that page.</description>
    </item>
    
    <item>
      <title>Testing CSS Grid</title>
      <link>https://loopedline.com/post/testing-css-grid/</link>
      <pubDate>Mon, 04 Apr 2022 09:44:48 -0400</pubDate>
      
      <guid>https://loopedline.com/post/testing-css-grid/</guid>
      <description>Update Note When this post was originally published, it linked to a dynamic version of the All Posts list page. That page has been retired. Consequently, links to that page have been replaced with a links to a saved static version of that page.
Introduction This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.</description>
    </item>
    
    <item>
      <title>Automatically Building a List of All Posts in Hugo</title>
      <link>https://loopedline.com/post/automatically-building-a-list-of-all-posts-in-hugo/</link>
      <pubDate>Fri, 01 Apr 2022 14:29:17 -0400</pubDate>
      
      <guid>https://loopedline.com/post/automatically-building-a-list-of-all-posts-in-hugo/</guid>
      <description>Update Note When this post was originally published, it linked to a dynamic version of the All Posts list page. That page has been retired. Consequently, links to that page have been replaced with a links to a saved static version of that page.
The Challenge This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.</description>
    </item>
    
    <item>
      <title>Changing a Hugo Theme Over Time - Topic</title>
      <link>https://loopedline.com/post/changing-a-hugo-theme-over-time/</link>
      <pubDate>Thu, 31 Mar 2022 14:17:14 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-a-hugo-theme-over-time/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
Consequently, nearly all design choices were initially made by the theme&amp;rsquo;s creator.
Naturally, when selecting a theme, you choose the one that best meets your goals. And the Minimal theme was chosen because it is clean and well-written.
But no theme is likely to match your project&amp;rsquo;s needs in every detail. As Zachary Wade Betz puts it:</description>
    </item>
    
    <item>
      <title>Changing the Spacing of Font Awesome Icons in Hugo</title>
      <link>https://loopedline.com/post/changing-the-spacing-of-font-awesome-icons-in-hugo/</link>
      <pubDate>Tue, 22 Mar 2022 13:54:32 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-the-spacing-of-font-awesome-icons-in-hugo/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
In this post, after resolving the problem of Changing the Size of Font Awesome Icons in Hugo, we now want to increase the spacing between the arrow icons used for page navigation icons on list pages.
The Process From the previous investigation mentioned above we know that the arrow icons are defined in the fa-arrow-left and fa-arrow-right elements of the paginator.</description>
    </item>
    
    <item>
      <title>Changing the Size of Font Awesome Icons in Hugo</title>
      <link>https://loopedline.com/post/changing-the-size-of-font-awesome-icons-in-hugo/</link>
      <pubDate>Mon, 21 Mar 2022 14:36:04 -0400</pubDate>
      
      <guid>https://loopedline.com/post/changing-the-size-of-font-awesome-icons-in-hugo/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
In this post, we&amp;rsquo;ll look at changing the page navigation icons on list pages. For our purposes, the arrows used at the bottom of each list page are too small, making them difficult to click.
The Process As has been mentioned before, because Hugo offers so much flexibility and produces pages in such a layered way, it can be difficult to find the right place to make the necessary alterations.</description>
    </item>
    
    <item>
      <title>Regular Expression Syntax Highlighting [UNSOLVED]</title>
      <link>https://loopedline.com/post/regular-expression-syntax-highlighting/</link>
      <pubDate>Thu, 17 Mar 2022 11:36:59 -0400</pubDate>
      
      <guid>https://loopedline.com/post/regular-expression-syntax-highlighting/</guid>
      <description>The Problem When posting snippets of regular expression code inside code blocks (as in this example) it would be helpful to apply syntax highlighting.
Because this site uses Hugo, which uses Chroma, which does not yet include support for highlighting regular expressions another approach is required.
The Process A web search for regular expression syntax highlighting returned some discussions of the general question:
 Is there a good syntax highlighting hint for regular expressions?</description>
    </item>
    
    <item>
      <title>Escaping Markdown Code Fences Nested Within Code Fences [SOLVED]</title>
      <link>https://loopedline.com/post/escaping-markdown-code-fences-nested-within-code-fences/</link>
      <pubDate>Wed, 16 Mar 2022 23:14:22 -0400</pubDate>
      
      <guid>https://loopedline.com/post/escaping-markdown-code-fences-nested-within-code-fences/</guid>
      <description>The Problem When authoring articles using Markdown that include Markdown special characters in the content, questions can come up about how to escape those special characters.
For instance, this article about updating Hugo posts with code syntax highlighting includes Markdown code fences within code fences, which required figuring out how to escape code fences within code fences.
The Process A web search quickly led to this helpful article, which explained the options for escaping code fencing.</description>
    </item>
    
    <item>
      <title>Modifying the New Article Template in Hugo</title>
      <link>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</link>
      <pubDate>Mon, 14 Mar 2022 14:12:31 -0400</pubDate>
      
      <guid>https://loopedline.com/post/modifying-the-new-article-template-in-hugo/</guid>
      <description>Background This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
After working with Hugo for a while you might find that there are certain pieces of code that you include in every project.
Once you tire of manually copying and pasting them, it&amp;rsquo;s time to figure out which template file to alter to automatically include those snippets.</description>
    </item>
    
    <item>
      <title>Simplifying Hugo Post Creation with a Bash Script</title>
      <link>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</link>
      <pubDate>Sun, 13 Mar 2022 22:16:57 -0400</pubDate>
      
      <guid>https://loopedline.com/post/simplifying-hugo-post-creation-with-a-bash-script/</guid>
      <description>Background Creating new posts in Hugo is already pretty simple thanks to the post creation command, but it can help to remove even little bits of friction.
Two points of friction in the current process are:
 navigating to the project directory, and properly formatting the new file name by remembering to name the file with dashes (-) instead of spaces and including the .md file extension  In the same way that we simplified updating Hugo front matter with a Bash script, we can use a script to make post creation even simpler as well.</description>
    </item>
    
    <item>
      <title>Updating Hugo Posts with Code Syntax Highlighting [SOLVED]</title>
      <link>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</link>
      <pubDate>Sat, 12 Mar 2022 15:07:58 -0500</pubDate>
      
      <guid>https://loopedline.com/post/updating-hugo-posts-with-code-syntax-highlighting/</guid>
      <description>The Problem Hugo&amp;rsquo;s code fence syntax produced code blocks but didn&amp;rsquo;t produce code with syntax highlighting.
The Process A web search for syntax highlighting in Hugo returned some Hugo documentation pages:
 Syntax Highlighting Configure Markup: Highlight  While these offered some background information, they didn&amp;rsquo;t help resolve the issue.
 That search also returned this article, which provided an example for one solution of adding the following to the Hugo config.</description>
    </item>
    
    <item>
      <title>Automating Hugo Website Publishing Workflow with Bash</title>
      <link>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</link>
      <pubDate>Thu, 03 Mar 2022 14:49:33 -0500</pubDate>
      
      <guid>https://loopedline.com/post/automating-hugo-website-publishing-with-bash/</guid>
      <description>Introduction Background We first need to define our terms.
Hugo already builds sites with one quick and easy command.
The automated website building this post refers to is several additional steps required for website publishing after that process in one particular workflow. Every person&amp;rsquo;s or team&amp;rsquo;s workflow for publishing a website is different. The workflow we&amp;rsquo;ll automate in this post includes the following:
 rebuilding a specific website with Hugo deleting all files and subdirectories in the website publishing directory except one specified file copying all files from the Hugo website project directory to the publishing directory  We&amp;rsquo;ll handle each step in turn and then bring them all together.</description>
    </item>
    
    <item>
      <title>Renaming Files with the rename Command (the Perl Version) in Bash</title>
      <link>https://loopedline.com/post/renaming-files-with-rename-command-the-perl-version/</link>
      <pubDate>Wed, 02 Mar 2022 21:21:25 -0500</pubDate>
      
      <guid>https://loopedline.com/post/renaming-files-with-rename-command-the-perl-version/</guid>
      <description>Renaming files with the rename command Renaming files is a basic and mundane task.
Fortunately, there are several tools to make it easier.
The Perl version of rename available in Bash on many Linux distributions is especially powerful since it can utilize regular expressions.
Confirm which version(s) of rename you have available As previously mentioned there can be more than one version of the rename command on your system. So you&amp;rsquo;ll first want to confirm that you have the Perl version of rename installed and verify how the command is invoked on your system.</description>
    </item>
    
    <item>
      <title>Automating Bash Shell Commands</title>
      <link>https://loopedline.com/post/automating-bash-shell-commands/</link>
      <pubDate>Fri, 25 Feb 2022 15:09:52 -0500</pubDate>
      
      <guid>https://loopedline.com/post/automating-bash-shell-commands/</guid>
      <description>Introduction to automating shell commands There is a lot that can be accomplished efficiently with Bash.
After getting started working with Bash you&amp;rsquo;ll quickly discover commands that you run again and again.
For some simple commands you can make them even more convenient by creating a shell alias or a shell function.
Other commands involving multiple steps you can typically use and manage more efficiently by creating a shell script.</description>
    </item>
    
    <item>
      <title>Creating a Directory with Bash to Test Commands</title>
      <link>https://loopedline.com/post/creating-a-directory-with-bash-to-test-commands/</link>
      <pubDate>Thu, 24 Feb 2022 13:51:11 -0500</pubDate>
      
      <guid>https://loopedline.com/post/creating-a-directory-with-bash-to-test-commands/</guid>
      <description>Why create a test directory? When learning to work with new commands or programs it makes sense to be careful.
In particular, command line tools can be especially powerful. They can allow the user to delete or overwrite data before they realize what has happened. Often, these effects will be irreversible.
One way to partially limit that risk is to work in a test directory when trying new commands. The scope of a command&amp;rsquo;s effects is often (but not always) bounded within a directory, so this can provide some protection against unintended consequences.</description>
    </item>
    
    <item>
      <title>Creating Multiple Files with Bash</title>
      <link>https://loopedline.com/post/creating-multiple-files-with-bash/</link>
      <pubDate>Wed, 16 Feb 2022 11:11:18 -0500</pubDate>
      
      <guid>https://loopedline.com/post/creating-multiple-files-with-bash/</guid>
      <description>Introduction When you want to create multiple files, Bash can help do it efficiently.
Below are several examples for creating files. To follow along, navigate to an empty folder where you want to create files and enter the commands.
A warning You may wish to remove files after each step, but since the rm command is powerful and can delete more files than you intended without prompting, make sure you understand its use before blindly applying the example commands below.</description>
    </item>
    
    <item>
      <title>Getting Started with the shuf Command in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-shuf-command-in-bash/</link>
      <pubDate>Tue, 15 Feb 2022 13:57:10 -0500</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-shuf-command-in-bash/</guid>
      <description>Introduction There are many, many, ways to create (pseudo)-random strings in Bash, but I found this approach utilizing shuf to be the most understandable. Also, it gives excellent control over the output (avoiding whitespace and special characters) without resorting to the use of the tr command to remove unwanted characters. And it seems to be available for many systems without requiring installation of additional packages.
The shuf command When first learning about a command like shuf it is helpful to start by reading the tldr and info entries for the command.</description>
    </item>
    
    <item>
      <title>Using the sed Command in a Bash Script to Update Hugo Front Matter</title>
      <link>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</link>
      <pubDate>Fri, 11 Feb 2022 11:37:37 -0500</pubDate>
      
      <guid>https://loopedline.com/post/using-sed-in-bash-script-to-update-hugo-front-matter/</guid>
      <description>Background Hugo used to have an undraft command to quickly alter front matter before publishing, but it was removed.
The command would update &amp;ldquo;the contentâ€™s draft status from â€˜Trueâ€™ to â€˜Falseâ€™ and&amp;hellip; the date to the current date and time&amp;rdquo;.
That&amp;rsquo;s useful functionality, so we&amp;rsquo;ll replicate it with a Bash script.
For this project we&amp;rsquo;ll use sed, which is one of the basic programs that comes with most distributions of Linux and it&amp;rsquo;s useful for (among other things) replacing segments of text.</description>
    </item>
    
    <item>
      <title>Getting started with the $RANDOM Variable in Bash</title>
      <link>https://loopedline.com/post/getting-started-with-random-variable-in-bash/</link>
      <pubDate>Mon, 07 Feb 2022 15:48:06 -0500</pubDate>
      
      <guid>https://loopedline.com/post/getting-started-with-random-variable-in-bash/</guid>
      <description>Creating Randomness in Bash There are many shell variables used in Bash. One of them is the Bash variable $RANDOM.
$RANDOM returns a pseudo-random number between 0 and 32767.
Try it by typing the following command into a Bash command line interpreter:
echo $RANDOM Run the command multiple times to see different results.
Changing the possible return range We can reduce the range of the output by using the modulo operator.</description>
    </item>
    
    <item>
      <title>There&#39;s a Difference Between rename and rename.ul in Bash</title>
      <link>https://loopedline.com/post/difference-between-rename-and-rename.ul/</link>
      <pubDate>Wed, 08 Dec 2021 13:20:10 -0500</pubDate>
      
      <guid>https://loopedline.com/post/difference-between-rename-and-rename.ul/</guid>
      <description>Confusion with rename There are several software packages with the name &amp;ldquo;rename&amp;rdquo; available for Bash.
That can cause confusion if you&amp;rsquo;re not aware of the fact.
Adding to the confusion, on many distributions of Linux, like Debian and Ubuntu, the rename command doesn&amp;rsquo;t refer to the &amp;ldquo;rename&amp;rdquo; that is part of the util-linux package. Instead, it likely refers to a &amp;ldquo;perl-rename&amp;rdquo; package. To call the util-linux version you&amp;rsquo;ll likely have to use the rename.</description>
    </item>
    
    <item>
      <title>Apt Update Not Working on Windows Subsystem for Linux [SOLVED]</title>
      <link>https://loopedline.com/post/apt-update-not-working-on-wsl/</link>
      <pubDate>Tue, 07 Dec 2021 15:20:39 -0500</pubDate>
      
      <guid>https://loopedline.com/post/apt-update-not-working-on-wsl/</guid>
      <description>The Problem In Windows Subsystem for Linux (WSL) when running the command
sudo apt update the following error appears for every package
 &amp;ldquo;Temporary failure resolving &amp;lsquo;archive.ubuntu.com&amp;rsquo;&amp;rdquo;
 and nothing is updated.
Furthermore, nothing can be installed using the command
sudo apt install &amp;lt;&amp;lt;PACKAGE-NAME&amp;gt;&amp;gt; for the same reason.
The Process A web search for the error led to a StackExchange question discussing the issue, which offered guidance on the problem.</description>
    </item>
    
    <item>
      <title>Unable to Open the Bash Shell in Ubuntu via Windows Subsystem for Linux [SOLVED]</title>
      <link>https://loopedline.com/post/unable-to-open-bash-on-wsl/</link>
      <pubDate>Tue, 07 Dec 2021 13:15:02 -0500</pubDate>
      
      <guid>https://loopedline.com/post/unable-to-open-bash-on-wsl/</guid>
      <description>The Problem When attempting to open the Bash shell in Ubuntu via Windows Subsystem for Linux (WSL) on Windows Terminal only the following message appears:
 The Windows Subsystem for Linux instance has terminated.
[process exited with code &amp;hellip;]
 The Process Part of the resolution process and sources are lost to me now, but I still want to document the solution that seems to resolve the issue.
A key seems to be running the terminal instance as administrator.</description>
    </item>
    
    <item>
      <title>Bash and the Linux Shell - 01 - Getting Introduced To Bash</title>
      <link>https://loopedline.com/post/bash-getting-started-working-with-the-shell/</link>
      <pubDate>Sun, 05 Dec 2021 17:12:50 -0500</pubDate>
      
      <guid>https://loopedline.com/post/bash-getting-started-working-with-the-shell/</guid>
      <description>Series This is part a series about Bash and the Linux Shell.
In this first post, we&amp;rsquo;ll look at what Bash is and what it&amp;rsquo;s useful for.
Introduction to Bash When you think of someone expertly working with a computer you might picture them stereotypically entering commands on a black screen with green text, the computer responding with rapidly scrolling walls of text.
For a long time I didn&amp;rsquo;t realize the thing they were typing in was called a shell.</description>
    </item>
    
    <item>
      <title>Visual Studio Code Learning Path and Recommended Resources</title>
      <link>https://loopedline.com/post/vscode-learning-path/</link>
      <pubDate>Mon, 16 Aug 2021 09:28:32 -0400</pubDate>
      
      <guid>https://loopedline.com/post/vscode-learning-path/</guid>
      <description>Learning Path for Visual Studio Code Step 1: Getting Started with Visual Studio Code Perhaps the best place to start learning about Visual Studio Code is the introduction to VS Code by James Q Quick. It also provides an introduction to Visual Studio Code Extensions as well as Emmet.
Then to get a refresher and a slightly different view, watch Getting started with Visual Studio Code and Get started with VS Code Extensions by the VS Code team.</description>
    </item>
    
    <item>
      <title>Disabling Hugo&#39;s Automatic Hyperlinking of URLs [SOLVED]</title>
      <link>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</link>
      <pubDate>Sat, 14 Aug 2021 14:44:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/disabling-hugos-automatic-hyperlinking-of-urls/</guid>
      <description>The Problem This project is built with Hugo and uses the Minimal Hugo theme.
This post is part of an ongoing effort to tailor the theme over time.
For this post, we&amp;rsquo;ll look at the issue that when Hugo rendered a webpage from a markdown file it automatically converted text URLs to hyperlinks.
The Process A web search for how to disable automatic hyperlinking in Hugo led to a few discussions of the issue:</description>
    </item>
    
    <item>
      <title>Hugo Site Looks Different Served Locally vs Remotely [SOLVED]</title>
      <link>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</link>
      <pubDate>Thu, 12 Aug 2021 22:44:18 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-site-looks-different-served-locally-vs-remotely/</guid>
      <description>The Problem When a new website layout generated with Hugo was pushed to production it rendered very differently on the web than it appeared locally.
It looked like the CSS was only partially applied and some elements overlapped one another.
The Process First, the source files were compared, but, as expected, they appeared identical.
Next, DevTools in the Chrome browser was used to compare a sample element on the site running locally vs remotely and showed that the sites were being styled by different CSS rules.</description>
    </item>
    
    <item>
      <title>Hugo Basic Terminal Command Quick Reference</title>
      <link>https://loopedline.com/post/hugo-basic-command-quick-reference/</link>
      <pubDate>Fri, 23 Jul 2021 12:30:00 -0400</pubDate>
      
      <guid>https://loopedline.com/post/hugo-basic-command-quick-reference/</guid>
      <description>Check Hugo version In a terminal, enter the command:
hugo version If Hugo is installed you should see a message indicating the Hugo version number.
Create a new website In a terminal pointed to the directory where you want Hugo project files to reside, enter the command:
hugo new site my-hugo-website NOTE: Replace my-hugo-website with the site name you want.
You should see a message beginning with
 Congratulations! Your new Hugo site is created in&amp;hellip;</description>
    </item>
    
    <item>
      <title>Building Your First Hugo Website</title>
      <link>https://loopedline.com/post/building-your-first-hugo-website/</link>
      <pubDate>Mon, 19 Jul 2021 21:05:55 -0400</pubDate>
      
      <guid>https://loopedline.com/post/building-your-first-hugo-website/</guid>
      <description>Who this is for If you want to build your first website with Hugo, this article is meant to get you started.
It is not an exhaustive or extensive guide. There are other good resources for that, and several are linked below.
But here you&amp;rsquo;ll find instructions on the critical path to get a website up and working.
There&amp;rsquo;s magic in motion, and just getting started is often the most important thing.</description>
    </item>
    
  </channel>
</rss>
